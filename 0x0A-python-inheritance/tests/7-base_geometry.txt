

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>>

Check string input
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check float input
>>> bg.integer_validator("name", (4,))
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check float input
>>> bg.integer_validator("name", [3])
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check float input
>>> bg.integer_validator("name", 14.6)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check boolean input
>>> bg.integer_validator("name", {3,4})
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check boolean input
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check None input
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

Check None input
>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

Check None input
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Check 0 input
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

Check input less than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
